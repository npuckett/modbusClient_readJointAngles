/* autogenerated by Processing revision 1292 on 2023-02-22 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import de.re.easymodbus.exceptions.*;
import de.re.easymodbus.modbusclient.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class modbusClient_readJointAngles extends PApplet {



//import ModbusRTU.*;


//import de.re.easymodbus.modbusclient.gui.*;
//import de.re.easymodbus.server.*;
//import de.re.easymodbus.server.gui.*;

int totalJoints = 6;
int jointAngleRads[] = new int[totalJoints];
float jointAngleDeg[] = new float[totalJoints];
int tcpPos[] = new int[3];
int mousePos[] = new int[3];


ModbusClient modbusClient;
String robotIP = "192.168.1.100";

public void setup()
{
/* size commented out by preprocessor */;

  modbusClient = new ModbusClient(robotIP,502);
  connectClient();
}

public void draw()
{
background(0);
  if(modbusClient.isConnected())
  {
    readJoints();
    readTCP();
    sendMouse();
  }
  else
  {
    println("not connected");
    connectClient();
  }

stroke(255);
fill(255);
line(width/2,0,width/2,height);

textAlign(CENTER,CENTER);
textSize(32);
text("Waypoint1",width/4,height/2);
text("Waypoint2",((width/4)*3),height/2);

// readRegister();
}
public void readTCP()
{
  try
  {
 tcpPos = modbusClient.ReadInputRegisters(400, 3);
  printArray(tcpPos);

  }
  catch (Exception e)
  {
    println("NOPE!!");  
  }

}
public void readJoints()
{
  try 
  {
  jointAngleRads = modbusClient.ReadInputRegisters(270, totalJoints);
     for(int i=0;i<jointAngleRads.length;i++)
     {
      jointAngleDeg[i]=degrees(jointAngleRads[i])/1000f; 
     }
     //printArray(jointAngleRads);
     //printArray(jointAngleDeg);  
  } catch (Exception e) 
  {
  println("NOPE!!");  
  }    
}
public void sendMouse()
{
  mousePos[0] = round(mouseX);  //128
  mousePos[1] = round(mouseY);  //129
  mousePos[2] = round(width/2); //130
  try
  {
    modbusClient.WriteMultipleRegisters(128, mousePos);
    
  }
  catch (Exception e)
  {
    println("NOPE!!");  
  }
}
public void connectClient()
{
  try
  {
    modbusClient.Connect();
    println("connected");
  }
  catch (Exception e)
  {
    println("NOPE!!");  
  }
}


  public void settings() { size(400, 400); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "modbusClient_readJointAngles" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
